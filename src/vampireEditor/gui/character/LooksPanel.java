/**
 * This file is part of Vampire Editor.
 *
 * Vampire Editor is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * Vampire Editor is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public License
 * along with Vampire Editor. If not, see <http://www.gnu.org/licenses/>.
 *
 * @package Vampire Editor
 * @author Marian Pollzien <map@wafriv.de>
 * @copyright (c) 2018, Marian Pollzien
 * @license https://www.gnu.org/licenses/lgpl.html LGPLv3
 */
package vampireEditor.gui.character;

import java.awt.Component;
import java.util.ArrayList;
import java.util.Collections;
import java.util.Vector;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JPanel;
import javax.swing.text.DateFormatter;
import vampireEditor.Character;
import vampireEditor.Configuration;
import vampireEditor.VampireEditor;
import vampireEditor.character.Clan;
import vampireEditor.gui.NewCharacterFocusTraversalPolicy;
import vampireEditor.gui.TranslatableComponent;
import vampireEditor.language.LanguageInterface;
import vampireEditor.utility.ClanComparator;

/**
 *
 * @author Marian Pollzien
 */
public class LooksPanel extends JPanel implements TranslatableComponent, CharacterPanelInterface {

    private final Configuration configuration;
    private LanguageInterface language;
    private DateFormatter dateFormatter;
    private vampireEditor.Character character;

    /**
     * Creates new form looksPanel
     *
     * @param configuration
     */
    public LooksPanel(Configuration configuration) {
        super();

        this.configuration = configuration;
        this.language = this.configuration.getLanguageObject();
    }

    /**
     * Init everything.
     */
    public void init() {
        this.initComponents();
        this.setFieldTexts();
        this.createFocusTraversalPolicy();
        this.fillCharacterData();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        sireField = new javax.swing.JTextField();
        sizeLabel = new javax.swing.JLabel();
        clanLabel = new javax.swing.JLabel();
        weightField = new javax.swing.JTextField();
        sectLabel = new javax.swing.JLabel();
        sectField = new javax.swing.JTextField();
        dayOfDeathLabel = new javax.swing.JLabel();
        sizeField = new javax.swing.JTextField();
        weightLabel = new javax.swing.JLabel();
        dayOfBirthField = new vampireEditor.gui.PlaceholderFormattedTextField();
        dayOfDeathField = new vampireEditor.gui.PlaceholderFormattedTextField();
        hairColorLabel = new javax.swing.JLabel();
        hairColorField = new javax.swing.JTextField();
        sexLabel = new javax.swing.JLabel();
        natureLabel = new javax.swing.JLabel();
        eyeColorLabel = new javax.swing.JLabel();
        natureField = new javax.swing.JTextField();
        eyeColorField = new javax.swing.JTextField();
        hideoutLabel = new javax.swing.JLabel();
        skinColorLabel = new javax.swing.JLabel();
        hideoutField = new javax.swing.JTextField();
        skinColorField = new javax.swing.JTextField();
        playerLabel = new javax.swing.JLabel();
        nationalityField = new javax.swing.JTextField();
        playerField = new javax.swing.JTextField();
        ageField = new javax.swing.JTextField();
        behaviourLabel = new javax.swing.JLabel();
        ageLabel = new javax.swing.JLabel();
        behaviourField = new javax.swing.JTextField();
        conceptField = new javax.swing.JTextField();
        nameField = new javax.swing.JTextField();
        nameLabel = new javax.swing.JLabel();
        chronicleLabel = new javax.swing.JLabel();
        chronicleField = new javax.swing.JTextField();
        generationLabel = new javax.swing.JLabel();
        looksLikeAgeLabel = new javax.swing.JLabel();
        looksLikeAgeField = new javax.swing.JTextField();
        conceptLabel = new javax.swing.JLabel();
        dayOfBirthLabel = new javax.swing.JLabel();
        sireLabel = new javax.swing.JLabel();
        nationalityLabel = new javax.swing.JLabel();
        generationField = new javax.swing.JTextField();
        clanField = new javax.swing.JTextField();
        sexField = new javax.swing.JTextField();

        sireField.setEditable(false);
        sireField.setName("maker"); // NOI18N

        sizeLabel.setLabelFor(sizeField);
        sizeLabel.setText("Size");

        clanLabel.setLabelFor(clanField);
        clanLabel.setText("Clan");

        weightField.setEditable(false);
        weightField.setName("weight"); // NOI18N

        sectLabel.setLabelFor(sectField);
        sectLabel.setText("Sect");

        sectField.setName("sect"); // NOI18N

        dayOfDeathLabel.setLabelFor(dayOfDeathField);
        dayOfDeathLabel.setText("Day of death");

        sizeField.setEditable(false);
        sizeField.setName("size"); // NOI18N

        weightLabel.setLabelFor(weightField);
        weightLabel.setText("Weight");

        dateFormatter = new javax.swing.text.DateFormatter(java.text.DateFormat.getDateInstance(java.text.DateFormat.MEDIUM));
        dayOfBirthField.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(dateFormatter));
        dayOfBirthField.setEditable(false);
        dayOfBirthField.setName("dayOfBirth"); // NOI18N

        dateFormatter = new javax.swing.text.DateFormatter(java.text.DateFormat.getDateInstance(java.text.DateFormat.MEDIUM));
        dayOfDeathField.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(dateFormatter));
        dayOfDeathField.setEditable(false);
        dayOfDeathField.setName("dayOfDeath"); // NOI18N

        hairColorLabel.setLabelFor(hairColorField);
        hairColorLabel.setText("Hair color");

        hairColorField.setEditable(false);
        hairColorField.setName("hairColor"); // NOI18N

        sexLabel.setLabelFor(sexField);
        sexLabel.setText("Sex");

        natureLabel.setLabelFor(natureField);
        natureLabel.setText("Nature");

        eyeColorLabel.setLabelFor(eyeColorField);
        eyeColorLabel.setText("Eye color");

        natureField.setEditable(false);
        natureField.setName("nature"); // NOI18N

        eyeColorField.setEditable(false);
        eyeColorField.setName("eyeColor"); // NOI18N

        hideoutLabel.setLabelFor(hideoutField);
        hideoutLabel.setText("Hideout");

        skinColorLabel.setLabelFor(skinColorField);
        skinColorLabel.setText("Skin color");

        hideoutField.setName("hideout"); // NOI18N

        skinColorField.setEditable(false);
        skinColorField.setName("skinColor"); // NOI18N

        playerLabel.setLabelFor(playerField);
        playerLabel.setText("Player");

        nationalityField.setEditable(false);
        nationalityField.setName("nationality"); // NOI18N

        playerField.setEditable(false);
        playerField.setName("player"); // NOI18N

        ageField.setEditable(false);
        ageField.setName("age"); // NOI18N

        behaviourLabel.setLabelFor(behaviourField);
        behaviourLabel.setText("Behaviour");

        ageLabel.setLabelFor(ageField);
        ageLabel.setText("Age");

        behaviourField.setEditable(false);
        behaviourField.setName("behaviour"); // NOI18N

        conceptField.setEditable(false);
        conceptField.setName("concept"); // NOI18N

        nameField.setName("name"); // NOI18N

        nameLabel.setLabelFor(nameField);
        nameLabel.setText("Name");

        chronicleLabel.setLabelFor(chronicleField);
        chronicleLabel.setText("Chronicle");

        chronicleField.setEditable(false);
        chronicleField.setName("chronicle"); // NOI18N

        generationLabel.setLabelFor(generationField);
        generationLabel.setText("Generation");

        looksLikeAgeLabel.setLabelFor(looksLikeAgeField);
        looksLikeAgeLabel.setText("Looks like age");

        looksLikeAgeField.setEditable(false);
        looksLikeAgeField.setName("looksLikeAge"); // NOI18N

        conceptLabel.setLabelFor(conceptField);
        conceptLabel.setText("Concept");

        dayOfBirthLabel.setLabelFor(dayOfBirthField);
        dayOfBirthLabel.setText("Day of birth");

        sireLabel.setLabelFor(sireField);
        sireLabel.setText("Sire");

        nationalityLabel.setLabelFor(nationalityField);
        nationalityLabel.setText("Nationality");

        generationField.setEditable(false);
        generationField.setName("chronicle"); // NOI18N

        clanField.setEditable(false);
        clanField.setName("maker"); // NOI18N

        sexField.setEditable(false);
        sexField.setName("weight"); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(11, 11, 11)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(chronicleLabel)
                    .addComponent(nameLabel)
                    .addComponent(generationLabel)
                    .addComponent(natureLabel)
                    .addComponent(hideoutLabel)
                    .addComponent(playerLabel)
                    .addComponent(behaviourLabel)
                    .addComponent(conceptLabel)
                    .addComponent(sireLabel)
                    .addComponent(clanLabel)
                    .addComponent(sectLabel))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(hideoutField, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(playerField, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(behaviourField, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(conceptField, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(sireField, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(sectField, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(natureField, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(nameField, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(chronicleField, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(generationField, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(clanField, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 55, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(looksLikeAgeLabel)
                    .addComponent(ageLabel)
                    .addComponent(dayOfBirthLabel)
                    .addComponent(dayOfDeathLabel)
                    .addComponent(hairColorLabel)
                    .addComponent(eyeColorLabel)
                    .addComponent(skinColorLabel)
                    .addComponent(nationalityLabel)
                    .addComponent(sizeLabel)
                    .addComponent(weightLabel)
                    .addComponent(sexLabel))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(hairColorField, javax.swing.GroupLayout.DEFAULT_SIZE, 170, Short.MAX_VALUE)
                    .addComponent(eyeColorField, javax.swing.GroupLayout.DEFAULT_SIZE, 170, Short.MAX_VALUE)
                    .addComponent(skinColorField, javax.swing.GroupLayout.DEFAULT_SIZE, 170, Short.MAX_VALUE)
                    .addComponent(nationalityField, javax.swing.GroupLayout.DEFAULT_SIZE, 170, Short.MAX_VALUE)
                    .addComponent(sizeField, javax.swing.GroupLayout.DEFAULT_SIZE, 170, Short.MAX_VALUE)
                    .addComponent(looksLikeAgeField, javax.swing.GroupLayout.DEFAULT_SIZE, 170, Short.MAX_VALUE)
                    .addComponent(weightField, javax.swing.GroupLayout.DEFAULT_SIZE, 170, Short.MAX_VALUE)
                    .addComponent(ageField, javax.swing.GroupLayout.DEFAULT_SIZE, 170, Short.MAX_VALUE)
                    .addComponent(dayOfBirthField, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(dayOfDeathField, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(sexField, javax.swing.GroupLayout.DEFAULT_SIZE, 170, Short.MAX_VALUE))
                .addContainerGap(30, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(11, 11, 11)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(ageField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(ageLabel))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(looksLikeAgeField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(looksLikeAgeLabel))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(dayOfBirthLabel)
                            .addComponent(dayOfBirthField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(dayOfDeathLabel)
                            .addComponent(dayOfDeathField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(hairColorLabel)
                            .addComponent(hairColorField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(eyeColorLabel)
                            .addComponent(eyeColorField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(skinColorLabel)
                            .addComponent(skinColorField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(nationalityLabel)
                            .addComponent(nationalityField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(sizeLabel)
                            .addComponent(sizeField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(weightLabel)
                            .addComponent(weightField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(sexLabel)
                            .addComponent(sexField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(nameField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(nameLabel))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(chronicleField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(chronicleLabel))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(generationLabel)
                            .addComponent(generationField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(natureLabel)
                            .addComponent(natureField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(hideoutLabel)
                            .addComponent(hideoutField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(playerLabel)
                            .addComponent(playerField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(behaviourLabel)
                            .addComponent(behaviourField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(conceptLabel)
                            .addComponent(conceptField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(sireLabel)
                            .addComponent(sireField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(clanLabel)
                            .addComponent(clanField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(sectLabel)
                            .addComponent(sectField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(120, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Set the translated texts for the fields and labels of the looks tab.
     */
    private void setFieldTexts() {
        this.nameLabel.setText(this.language.translate("name"));
        this.chronicleLabel.setText(this.language.translate("chronicle"));
        this.generationLabel.setText(this.language.translate("generation"));
        this.natureLabel.setText(this.language.translate("nature"));
        this.hideoutLabel.setText(this.language.translate("hideout"));
        this.playerLabel.setText(this.language.translate("player"));
        this.behaviourLabel.setText(this.language.translate("behaviour"));
        this.conceptLabel.setText(this.language.translate("concept"));
        this.sireLabel.setText(this.language.translate("sire"));
        this.clanLabel.setText(this.language.translate("clan"));
        this.sectLabel.setText(this.language.translate("sect"));

        this.ageLabel.setText(this.language.translate("age"));
        this.looksLikeAgeLabel.setText(this.language.translate("looksLikeAge"));
        this.dayOfBirthLabel.setText(this.language.translate("dayOfBirth"));
        this.dayOfDeathLabel.setText(this.language.translate("dayOfDeath"));
        this.hairColorLabel.setText(this.language.translate("hairColor"));
        this.eyeColorLabel.setText(this.language.translate("eyeColor"));
        this.skinColorLabel.setText(this.language.translate("skinColor"));
        this.nationalityLabel.setText(this.language.translate("nationality"));
        this.sizeLabel.setText(this.language.translate("size"));
        this.weightLabel.setText(this.language.translate("weight"));
        this.sexLabel.setText(this.language.translate("sex"));
    }

    /**
     * Get the generations for showing them in the form.
     *
     * @return
     */
    public DefaultComboBoxModel getGenerations() {
        DefaultComboBoxModel model = new DefaultComboBoxModel();
        model.addElement("");

        VampireEditor.getGenerations().forEach((generation) -> {
            model.addElement(generation);
        });

        return model;
    }

    /**
     * Get the sexes for showing them in the form.
     *
     * @return
     */
    public DefaultComboBoxModel getSexes() {
        return new DefaultComboBoxModel(vampireEditor.Character.Sex.values());
    }

    /**
     * Get the generations for showing them in the form.
     *
     * @return
     */
    public DefaultComboBoxModel getClans() {
        DefaultComboBoxModel model = new DefaultComboBoxModel();
        model.addElement("");
        ArrayList<Clan> sortedClans = new ArrayList<>(VampireEditor.getClans().values());
        Collections.sort(sortedClans, new ClanComparator());

        sortedClans.forEach((clan) -> {
            model.addElement(clan);
        });

        return model;
    }

    /**
     * Create the focus traversal policy for the looks tab.
     */
    private void createFocusTraversalPolicy() {
        Vector<Component> order = new Vector<>();
        order.add(this.nameField);
        order.add(this.hideoutField);
        order.add(this.sectField);
        this.setFocusTraversalPolicy(new NewCharacterFocusTraversalPolicy(order));
        this.setFocusTraversalPolicyProvider(true);
    }

    /**
     * This method checks every input made by the user for duplicate entries.
     * This method is only implemented to achive consistency for every panel.
     *
     * @return Returns true if a duplicate entry has been found.
     */
    public boolean checkAllFields() {
        return false;
    }

    /**
     * Set the character used to prefill every field.
     *
     * @param character
     */
    @Override
    public void setCharacter(Character character) {
        this.character = character;
    }

    /**
     * Fill in the character data. If no character is set, nothing will be added.
     */
    @Override
    public void fillCharacterData() {
        if (this.character == null) {
            return;
        }

        this.nameField.setText(this.character.getName());
        this.chronicleField.setText(this.character.getChronicle());
        this.generationField.setText(this.character.getGeneration().toString());
        this.natureField.setText(this.character.getNature());
        this.hideoutField.setText(this.character.getHideout());
        this.playerField.setText(this.character.getPlayer());
        this.behaviourField.setText(this.character.getBehaviour());
        this.conceptField.setText(this.character.getConcept());
        this.sireField.setText(this.character.getSire());
        this.clanField.setText(this.character.getClan().getName());
        this.sectField.setText(this.character.getSect());

        if (this.character.getAge() > 0) {
            this.ageField.setText(Integer.toString(this.character.getAge()));
        }

        if (this.character.getLooksLikeAge() > 0) {
            this.looksLikeAgeField.setText(Integer.toString(this.character.getLooksLikeAge()));
        }

        if (this.character.getDayOfBirth() != null) {
            this.dayOfBirthField.setValue(this.character.getDayOfBirth());
        }

        if (this.character.getDayOfDeath() != null) {
            this.dayOfDeathField.setValue(this.character.getDayOfDeath());
        }

        this.hairColorField.setText(this.character.getHairColor());
        this.eyeColorField.setText(this.character.getEyeColor());
        this.skinColorField.setText(this.character.getSkinColor());
        this.nationalityField.setText(this.character.getNationality());

        if (this.character.getSize() > 0) {
            this.sizeField.setText(Integer.toString(this.character.getSize()));
        }

        if (this.character.getWeight() > 0) {
            this.weightField.setText(Integer.toString(this.character.getWeight()));
        }

        this.sexField.setText(this.character.getSex().toString());
    }

    /**
     * Update the texts of every component in the component.
     */
    @Override
    public void updateTexts() {
        this.configuration.loadProperties();
        this.language = this.configuration.getLanguageObject();
        this.setFieldTexts();
        this.clanField.setText(this.character.getClan().getName());
        this.sexField.setText(this.character.getSex().toString());
    }
// <editor-fold defaultstate="collapsed" desc="Generated variables">
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField ageField;
    private javax.swing.JLabel ageLabel;
    private javax.swing.JTextField behaviourField;
    private javax.swing.JLabel behaviourLabel;
    private javax.swing.JTextField chronicleField;
    private javax.swing.JLabel chronicleLabel;
    private javax.swing.JTextField clanField;
    private javax.swing.JLabel clanLabel;
    private javax.swing.JTextField conceptField;
    private javax.swing.JLabel conceptLabel;
    private vampireEditor.gui.PlaceholderFormattedTextField dayOfBirthField;
    private javax.swing.JLabel dayOfBirthLabel;
    private vampireEditor.gui.PlaceholderFormattedTextField dayOfDeathField;
    private javax.swing.JLabel dayOfDeathLabel;
    private javax.swing.JTextField eyeColorField;
    private javax.swing.JLabel eyeColorLabel;
    private javax.swing.JTextField generationField;
    private javax.swing.JLabel generationLabel;
    private javax.swing.JTextField hairColorField;
    private javax.swing.JLabel hairColorLabel;
    private javax.swing.JTextField hideoutField;
    private javax.swing.JLabel hideoutLabel;
    private javax.swing.JTextField looksLikeAgeField;
    private javax.swing.JLabel looksLikeAgeLabel;
    private javax.swing.JTextField nameField;
    private javax.swing.JLabel nameLabel;
    private javax.swing.JTextField nationalityField;
    private javax.swing.JLabel nationalityLabel;
    private javax.swing.JTextField natureField;
    private javax.swing.JLabel natureLabel;
    private javax.swing.JTextField playerField;
    private javax.swing.JLabel playerLabel;
    private javax.swing.JTextField sectField;
    private javax.swing.JLabel sectLabel;
    private javax.swing.JTextField sexField;
    private javax.swing.JLabel sexLabel;
    private javax.swing.JTextField sireField;
    private javax.swing.JLabel sireLabel;
    private javax.swing.JTextField sizeField;
    private javax.swing.JLabel sizeLabel;
    private javax.swing.JTextField skinColorField;
    private javax.swing.JLabel skinColorLabel;
    private javax.swing.JTextField weightField;
    private javax.swing.JLabel weightLabel;
    // End of variables declaration//GEN-END:variables
    // </editor-fold>
}

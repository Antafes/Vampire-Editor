/**
 * This file is part of Vampire Editor.
 *
 * Vampire Editor is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * Vampire Editor is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public License
 * along with Vampire Editor. If not, see <http://www.gnu.org/licenses/>.
 *
 * @package Vampire Editor
 * @author Marian Pollzien <map@wafriv.de>
 * @copyright (c) 2018, Marian Pollzien
 * @license https://www.gnu.org/licenses/lgpl.html LGPLv3
 */
package vampireEditor.gui;

import java.awt.Component;
import java.util.Vector;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JComboBox;
import javax.swing.JSpinner;
import javax.swing.SpinnerNumberModel;
import javax.swing.event.ChangeEvent;
import javax.swing.text.DefaultFormatter;
import vampireEditor.Configuration;
import vampireEditor.language.LanguageInterface;

/**
 *
 * @author Marian Pollzien
 */
public class AbilitiesPanel extends javax.swing.JPanel {

    private final Configuration configuration;
    private final LanguageInterface language;
    private final NewCharacterDialog parent;
    private ComponentDocumentListener documentListener;

    /**
     * Creates new form AbilitiesPanel
     *
     * @param parent
     * @param configuration
     */
    public AbilitiesPanel(NewCharacterDialog parent, Configuration configuration) {
        super();
        this.parent = parent;
        this.configuration = configuration;
        this.language = this.configuration.getLanguageObject();

        this.initComponents();
        this.init();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        alertnessField = new javax.swing.JSpinner();
        athleticsLabel = new javax.swing.JLabel();
        skillsWeightingComboBox = new javax.swing.JComboBox<>();
        knowledgesWeightingComboBox = new javax.swing.JComboBox<>();
        talentsPointsTextField = new javax.swing.JTextField();
        talentsMaxPointsTextField = new javax.swing.JTextField();
        meleeField = new javax.swing.JSpinner();
        skillsPointsTextField = new javax.swing.JTextField();
        etiquetteField = new javax.swing.JSpinner();
        skillsMaxPointsTextField = new javax.swing.JTextField();
        herbalismLabel = new javax.swing.JLabel();
        knowledgesPointsTextField = new javax.swing.JTextField();
        rideField = new javax.swing.JSpinner();
        knowledgesMaxPointsTextField = new javax.swing.JTextField();
        musicLabel = new javax.swing.JLabel();
        backButton = new javax.swing.JButton();
        stealthLabel = new javax.swing.JLabel();
        nextButton = new javax.swing.JButton();
        stealthField = new javax.swing.JSpinner();
        athleticsField = new javax.swing.JSpinner();
        craftsLabel = new javax.swing.JLabel();
        talentsLabel = new javax.swing.JLabel();
        musicField = new javax.swing.JSpinner();
        skillsLabel = new javax.swing.JLabel();
        rideLabel = new javax.swing.JLabel();
        knowledgesLabel = new javax.swing.JLabel();
        actingLabel = new javax.swing.JLabel();
        burglaryField = new javax.swing.JSpinner();
        brawlLabel = new javax.swing.JLabel();
        dodgeLabel = new javax.swing.JLabel();
        dodgeField = new javax.swing.JSpinner();
        brawlField = new javax.swing.JSpinner();
        survivalLabel = new javax.swing.JLabel();
        craftsField = new javax.swing.JSpinner();
        survivalField = new javax.swing.JSpinner();
        animalKenLabel = new javax.swing.JLabel();
        herbalismField = new javax.swing.JSpinner();
        etiquetteLabel = new javax.swing.JLabel();
        meleeLabel = new javax.swing.JLabel();
        animalKenField = new javax.swing.JSpinner();
        archeryLabel = new javax.swing.JLabel();
        administrationField = new javax.swing.JSpinner();
        linguisticsField = new javax.swing.JSpinner();
        investigationField = new javax.swing.JSpinner();
        lawLabel = new javax.swing.JLabel();
        occultField = new javax.swing.JSpinner();
        medicineLabel = new javax.swing.JLabel();
        politicsLabel = new javax.swing.JLabel();
        politicsField = new javax.swing.JSpinner();
        folkloreLabel = new javax.swing.JLabel();
        medicineField = new javax.swing.JSpinner();
        occultLabel = new javax.swing.JLabel();
        scienceLabel = new javax.swing.JLabel();
        folkloreField = new javax.swing.JSpinner();
        scienceField = new javax.swing.JSpinner();
        academicKnowledgeLabel = new javax.swing.JLabel();
        burglaryLabel = new javax.swing.JLabel();
        lawField = new javax.swing.JSpinner();
        intimidationField = new javax.swing.JSpinner();
        investigationLabel = new javax.swing.JLabel();
        empathyLabel = new javax.swing.JLabel();
        linguisticsLabel = new javax.swing.JLabel();
        leadershipLabel = new javax.swing.JLabel();
        academicKnowledgeField = new javax.swing.JSpinner();
        leadershipField = new javax.swing.JSpinner();
        administrationLabel = new javax.swing.JLabel();
        empathyField = new javax.swing.JSpinner();
        talentsWeightingComboBox = new javax.swing.JComboBox<>();
        intimidationLabel = new javax.swing.JLabel();
        subterfugeLabel = new javax.swing.JLabel();
        subterfugeField = new javax.swing.JSpinner();
        archeryField = new javax.swing.JSpinner();
        actingField = new javax.swing.JSpinner();
        alertnessLabel = new javax.swing.JLabel();

        this.addChangeListener(alertnessField);
        alertnessField.setModel(new javax.swing.SpinnerNumberModel(0, 0, 10, 1));

        athleticsLabel.setText("Athletics");

        skillsWeightingComboBox.setModel(new DefaultComboBoxModel(Weighting.values()));
        skillsWeightingComboBox.setSelectedIndex(1);
        skillsWeightingComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                skillsWeightingComboBoxActionPerformed(evt);
            }
        });

        knowledgesWeightingComboBox.setModel(new DefaultComboBoxModel(Weighting.values()));
        knowledgesWeightingComboBox.setSelectedIndex(2);
        knowledgesWeightingComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                knowledgesWeightingComboBoxActionPerformed(evt);
            }
        });

        talentsPointsTextField.setText("0");
        talentsPointsTextField.setEnabled(false);

        talentsMaxPointsTextField.setText("13");
        talentsMaxPointsTextField.setEnabled(false);

        this.addChangeListener(meleeField);
        meleeField.setModel(new javax.swing.SpinnerNumberModel(0, 0, 10, 1));

        skillsPointsTextField.setText("0");
        skillsPointsTextField.setEnabled(false);
        skillsPointsTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                skillsPointsTextFieldActionPerformed(evt);
            }
        });

        this.addChangeListener(etiquetteField);
        etiquetteField.setModel(new javax.swing.SpinnerNumberModel(0, 0, 10, 1));

        skillsMaxPointsTextField.setText("9");
        skillsMaxPointsTextField.setEnabled(false);

        herbalismLabel.setText("Herbalism");

        knowledgesPointsTextField.setText("0");
        knowledgesPointsTextField.setEnabled(false);

        this.addChangeListener(rideField);
        rideField.setModel(new javax.swing.SpinnerNumberModel(0, 0, 10, 1));

        knowledgesMaxPointsTextField.setText("3");
        knowledgesMaxPointsTextField.setEnabled(false);

        musicLabel.setText("Music");

        backButton.setText("Back");
        backButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backButtonActionPerformed(evt);
            }
        });

        stealthLabel.setText("Stealth");

        nextButton.setText("Next");
        nextButton.setEnabled(false);
        nextButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nextButtonActionPerformed(evt);
            }
        });

        this.addChangeListener(stealthField);
        stealthField.setModel(new javax.swing.SpinnerNumberModel(0, 0, 10, 1));

        this.addChangeListener(athleticsField);
        athleticsField.setModel(new javax.swing.SpinnerNumberModel(0, 0, 10, 1));

        craftsLabel.setText("Crafts");

        talentsLabel.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        talentsLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        talentsLabel.setText("Talents");

        this.addChangeListener(musicField);
        musicField.setModel(new javax.swing.SpinnerNumberModel(0, 0, 10, 1));

        skillsLabel.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        skillsLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        skillsLabel.setText("Skills");

        rideLabel.setText("Ride");

        knowledgesLabel.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        knowledgesLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        knowledgesLabel.setText("Knowledges");

        actingLabel.setText("Acting");

        this.addChangeListener(burglaryField);
        burglaryField.setModel(new javax.swing.SpinnerNumberModel(0, 0, 10, 1));

        brawlLabel.setText("Brawl");

        dodgeLabel.setText("Dodge");

        this.addChangeListener(dodgeField);
        dodgeField.setModel(new javax.swing.SpinnerNumberModel(0, 0, 10, 1));

        this.addChangeListener(brawlField);
        brawlField.setModel(new javax.swing.SpinnerNumberModel(0, 0, 10, 1));

        survivalLabel.setText("Survival");

        this.addChangeListener(craftsField);
        craftsField.setModel(new javax.swing.SpinnerNumberModel(0, 0, 10, 1));

        this.addChangeListener(survivalField);
        survivalField.setModel(new javax.swing.SpinnerNumberModel(0, 0, 10, 1));

        animalKenLabel.setText("Animal Ken");

        this.addChangeListener(herbalismField);
        herbalismField.setModel(new javax.swing.SpinnerNumberModel(0, 0, 10, 1));

        etiquetteLabel.setText("Etiquette");

        meleeLabel.setText("Melee");

        this.addChangeListener(animalKenField);
        animalKenField.setModel(new javax.swing.SpinnerNumberModel(0, 0, 10, 1));

        archeryLabel.setText("Archery");

        this.addChangeListener(administrationField);
        administrationField.setModel(new javax.swing.SpinnerNumberModel(0, 0, 10, 1));

        this.addChangeListener(linguisticsField);
        linguisticsField.setModel(new javax.swing.SpinnerNumberModel(0, 0, 10, 1));

        this.addChangeListener(investigationField);
        investigationField.setModel(new javax.swing.SpinnerNumberModel(0, 0, 10, 1));

        lawLabel.setText("Law");

        this.addChangeListener(occultField);
        occultField.setModel(new javax.swing.SpinnerNumberModel(0, 0, 10, 1));

        medicineLabel.setText("Medicine");

        politicsLabel.setText("Politics");

        this.addChangeListener(politicsField);
        politicsField.setModel(new javax.swing.SpinnerNumberModel(0, 0, 10, 1));

        folkloreLabel.setText("Folklore");

        this.addChangeListener(medicineField);
        medicineField.setModel(new javax.swing.SpinnerNumberModel(0, 0, 10, 1));

        occultLabel.setText("Occult");

        scienceLabel.setText("Science");

        this.addChangeListener(folkloreField);
        folkloreField.setModel(new javax.swing.SpinnerNumberModel(0, 0, 10, 1));

        this.addChangeListener(scienceField);
        scienceField.setModel(new javax.swing.SpinnerNumberModel(0, 0, 10, 1));

        academicKnowledgeLabel.setText("Academic knowledge");

        burglaryLabel.setText("Burglary");

        this.addChangeListener(lawField);
        lawField.setModel(new javax.swing.SpinnerNumberModel(0, 0, 10, 1));

        this.addChangeListener(intimidationField);
        intimidationField.setModel(new javax.swing.SpinnerNumberModel(0, 0, 10, 1));

        investigationLabel.setText("Investigation");

        empathyLabel.setText("Empathy");

        linguisticsLabel.setText("Linguistics");

        leadershipLabel.setText("Leadership");

        this.addChangeListener(academicKnowledgeField);
        academicKnowledgeField.setModel(new javax.swing.SpinnerNumberModel(0, 0, 10, 1));

        this.addChangeListener(leadershipField);
        leadershipField.setModel(new javax.swing.SpinnerNumberModel(0, 0, 10, 1));

        administrationLabel.setText("Administration");

        this.addChangeListener(empathyField);
        empathyField.setModel(new javax.swing.SpinnerNumberModel(0, 0, 10, 1));

        talentsWeightingComboBox.setModel(new DefaultComboBoxModel(Weighting.values()));
        talentsWeightingComboBox.setSelectedIndex(0);
        talentsWeightingComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                talentsWeightingComboBoxActionPerformed(evt);
            }
        });

        intimidationLabel.setText("Intimidation");

        subterfugeLabel.setText("Subterfuge");

        this.addChangeListener(subterfugeField);
        subterfugeField.setModel(new javax.swing.SpinnerNumberModel(0, 0, 10, 1));

        this.addChangeListener(archeryField);
        archeryField.setModel(new javax.swing.SpinnerNumberModel(0, 0, 10, 1));

        this.addChangeListener(actingField);
        actingField.setModel(new javax.swing.SpinnerNumberModel(0, 0, 10, 1));

        alertnessLabel.setText("Alertness");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(11, 11, 11)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(athleticsLabel)
                                    .addComponent(alertnessLabel)
                                    .addComponent(actingLabel)
                                    .addComponent(dodgeLabel)
                                    .addComponent(burglaryLabel)
                                    .addComponent(brawlLabel)
                                    .addComponent(leadershipLabel)
                                    .addComponent(empathyLabel)
                                    .addComponent(subterfugeLabel)
                                    .addComponent(intimidationLabel))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(burglaryField, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(dodgeField, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(athleticsField, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(brawlField, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(alertnessField, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(actingField, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(leadershipField, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(empathyField, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(intimidationField, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(subterfugeField, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(talentsLabel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addGap(55, 55, 55)
                                .addComponent(talentsPointsTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, 0)
                                .addComponent(talentsMaxPointsTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 83, Short.MAX_VALUE)))
                        .addGap(35, 35, 35))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(40, 40, 40)
                        .addComponent(talentsWeightingComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(meleeLabel)
                                    .addComponent(rideLabel)
                                    .addComponent(survivalLabel)
                                    .addComponent(stealthLabel)
                                    .addComponent(herbalismLabel)
                                    .addComponent(etiquetteLabel)
                                    .addComponent(animalKenLabel)
                                    .addComponent(archeryLabel)
                                    .addComponent(craftsLabel)
                                    .addComponent(musicLabel))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 98, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(archeryField, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(survivalField, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(craftsField, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(herbalismField, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(meleeField, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(etiquetteField, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(stealthField, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(musicField, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(rideField, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(animalKenField, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(skillsLabel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(35, 35, 35))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(53, 53, 53)
                        .addComponent(skillsPointsTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, 0)
                        .addComponent(skillsMaxPointsTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(45, 45, 45)
                        .addComponent(skillsWeightingComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(occultLabel)
                                .addComponent(scienceLabel)
                                .addComponent(medicineLabel)
                                .addComponent(politicsLabel)
                                .addComponent(investigationLabel)
                                .addComponent(linguisticsLabel)
                                .addComponent(lawLabel)
                                .addComponent(folkloreLabel)
                                .addComponent(administrationLabel)
                                .addComponent(academicKnowledgeLabel))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 30, Short.MAX_VALUE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(administrationField, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(folkloreField, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addComponent(lawField, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(linguisticsField, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(investigationField, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(politicsField, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(medicineField, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(scienceField, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(occultField, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(academicKnowledgeField, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGroup(layout.createSequentialGroup()
                            .addGap(60, 60, 60)
                            .addComponent(knowledgesPointsTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(0, 0, 0)
                            .addComponent(knowledgesMaxPointsTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(knowledgesLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(40, 40, 40)
                        .addComponent(knowledgesWeightingComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(10, 10, 10))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(backButton, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(nextButton, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(talentsLabel)
                    .addComponent(skillsLabel)
                    .addComponent(knowledgesLabel))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(academicKnowledgeLabel)
                            .addComponent(academicKnowledgeField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(talentsWeightingComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(skillsWeightingComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(knowledgesWeightingComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(actingField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(actingLabel)
                            .addComponent(animalKenLabel)
                            .addComponent(animalKenField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(alertnessField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(alertnessLabel)
                            .addComponent(archeryLabel)
                            .addComponent(archeryField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(administrationLabel)
                            .addComponent(administrationField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(6, 6, 6)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(athleticsLabel)
                            .addComponent(athleticsField, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(craftsLabel)
                            .addComponent(craftsField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(folkloreLabel)
                            .addComponent(folkloreField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(brawlField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(brawlLabel)
                            .addComponent(etiquetteLabel)
                            .addComponent(etiquetteField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(investigationLabel)
                            .addComponent(lawField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(burglaryField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(burglaryLabel)
                            .addComponent(herbalismLabel)
                            .addComponent(herbalismField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lawLabel)
                            .addComponent(linguisticsField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(dodgeField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(dodgeLabel)
                            .addComponent(meleeLabel)
                            .addComponent(meleeField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(linguisticsLabel)
                            .addComponent(medicineField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(empathyField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(empathyLabel)
                            .addComponent(musicLabel)
                            .addComponent(musicField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(medicineLabel)
                            .addComponent(investigationField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(intimidationField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(intimidationLabel)
                            .addComponent(rideLabel)
                            .addComponent(rideField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(occultLabel)
                            .addComponent(occultField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(leadershipField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(leadershipLabel)
                            .addComponent(stealthLabel)
                            .addComponent(stealthField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(politicsLabel)
                            .addComponent(politicsField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(subterfugeField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(subterfugeLabel)
                            .addComponent(survivalLabel)
                            .addComponent(survivalField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(scienceLabel)
                            .addComponent(scienceField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(skillsPointsTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(skillsMaxPointsTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(knowledgesPointsTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(knowledgesMaxPointsTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(talentsPointsTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(talentsMaxPointsTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nextButton)
                    .addComponent(backButton))
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void skillsWeightingComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_skillsWeightingComboBoxActionPerformed
        this.switchWeightings(
            this.skillsWeightingComboBox,
            this.talentsWeightingComboBox,
            this.knowledgesWeightingComboBox
        );
        Weighting weighting = ((Weighting) this.skillsWeightingComboBox.getSelectedItem());
        this.skillsMaxPointsTextField.setText(Integer.toString(weighting.getAbilitiesMax()));
        this.parent.calculateUsedFreeAdditionalPoints();
    }//GEN-LAST:event_skillsWeightingComboBoxActionPerformed

    private void knowledgesWeightingComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_knowledgesWeightingComboBoxActionPerformed
        this.switchWeightings(
            this.knowledgesWeightingComboBox,
            this.talentsWeightingComboBox,
            this.skillsWeightingComboBox
        );
        Weighting weighting = ((Weighting) this.knowledgesWeightingComboBox.getSelectedItem());
        this.knowledgesMaxPointsTextField.setText(Integer.toString(weighting.getAbilitiesMax()));
        this.parent.calculateUsedFreeAdditionalPoints();
    }//GEN-LAST:event_knowledgesWeightingComboBoxActionPerformed

    private void skillsPointsTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_skillsPointsTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_skillsPointsTextFieldActionPerformed

    private void backButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backButtonActionPerformed
        this.parent.getCharacterTabPane().setSelectedIndex(this.parent.getCharacterTabPane().getSelectedIndex() - 1);
    }//GEN-LAST:event_backButtonActionPerformed

    private void nextButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nextButtonActionPerformed
        this.parent.getCharacterTabPane().setSelectedIndex(this.parent.getCharacterTabPane().getSelectedIndex() + 1);
    }//GEN-LAST:event_nextButtonActionPerformed

    private void talentsWeightingComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_talentsWeightingComboBoxActionPerformed
        this.switchWeightings(
            this.talentsWeightingComboBox,
            this.skillsWeightingComboBox,
            this.knowledgesWeightingComboBox
        );
        Weighting weighting = ((Weighting) this.talentsWeightingComboBox.getSelectedItem());
        this.talentsMaxPointsTextField.setText(Integer.toString(weighting.getAbilitiesMax()));
        this.parent.calculateUsedFreeAdditionalPoints();
    }//GEN-LAST:event_talentsWeightingComboBoxActionPerformed

    private void init() {
        this.setFieldTexts();
        this.createFocusTraversalPolicy();
    }

    /**
     * Set the translated texts for the fields and labels on the skills tab.
     */
    private void setFieldTexts() {

        this.talentsLabel.setText(this.language.translate("talents"));
        this.actingLabel.setText(this.language.translate("acting"));
        this.alertnessLabel.setText(this.language.translate("alertness"));
        this.athleticsLabel.setText(this.language.translate("athletics"));
        this.brawlLabel.setText(this.language.translate("brawl"));
        this.burglaryLabel.setText(this.language.translate("burglary"));
        this.dodgeLabel.setText(this.language.translate("dodge"));
        this.empathyLabel.setText(this.language.translate("empathy"));
        this.intimidationLabel.setText(this.language.translate("intimidation"));
        this.leadershipLabel.setText(this.language.translate("leadership"));
        this.subterfugeLabel.setText(this.language.translate("subterfuge"));

        this.skillsLabel.setText(this.language.translate("skills"));
        this.animalKenLabel.setText(this.language.translate("animalKen"));
        this.archeryLabel.setText(this.language.translate("archery"));
        this.craftsLabel.setText(this.language.translate("crafts"));
        this.etiquetteLabel.setText(this.language.translate("etiquette"));
        this.herbalismLabel.setText(this.language.translate("herbalism"));
        this.meleeLabel.setText(this.language.translate("melee"));
        this.musicLabel.setText(this.language.translate("music"));
        this.rideLabel.setText(this.language.translate("ride"));
        this.stealthLabel.setText(this.language.translate("stealth"));
        this.survivalLabel.setText(this.language.translate("survival"));

        this.knowledgesLabel.setText(this.language.translate("knowledges"));
        this.academicKnowledgeLabel.setText(this.language.translate("academicKnowledge"));
        this.administrationLabel.setText(this.language.translate("administration"));
        this.folkloreLabel.setText(this.language.translate("folklore"));
        this.investigationLabel.setText(this.language.translate("investigation"));
        this.lawLabel.setText(this.language.translate("law"));
        this.linguisticsLabel.setText(this.language.translate("linguistics"));
        this.medicineLabel.setText(this.language.translate("medicine"));
        this.occultLabel.setText(this.language.translate("occult"));
        this.politicsLabel.setText(this.language.translate("politics"));
        this.scienceLabel.setText(this.language.translate("science"));

        this.nextButton.setText(this.language.translate("next"));
        this.backButton.setText(this.language.translate("back"));
    }

    /**
     * Create the focus traversal policy for the attributes tab.
     */
    private void createFocusTraversalPolicy() {
        Vector<Component> order = new Vector<>();

        order.add(this.actingField);
        order.add(this.alertnessField);
        order.add(this.athleticsField);
        order.add(this.brawlField);
        order.add(this.burglaryField);
        order.add(this.dodgeField);
        order.add(this.empathyField);
        order.add(this.intimidationField);
        order.add(this.leadershipField);
        order.add(this.subterfugeField);

        order.add(this.animalKenField);
        order.add(this.archeryField);
        order.add(this.craftsField);
        order.add(this.etiquetteField);
        order.add(this.herbalismField);
        order.add(this.meleeField);
        order.add(this.musicField);
        order.add(this.rideField);
        order.add(this.stealthField);
        order.add(this.survivalField);

        order.add(this.academicKnowledgeField);
        order.add(this.administrationField);
        order.add(this.folkloreField);
        order.add(this.investigationField);
        order.add(this.lawField);
        order.add(this.linguisticsField);
        order.add(this.medicineField);
        order.add(this.occultField);
        order.add(this.politicsField);
        order.add(this.scienceField);

        this.setFocusTraversalPolicy(new NewCharacterFocusTraversalPolicy(order));
        this.setFocusTraversalPolicyProvider(true);
    }

    /**
     * Switch the selection for the combo box with the same value to the
     * remaining value.
     * The first combo box will be treated as the one the change was made on.
     *
     * @param first
     * @param second
     * @param third
     */
    private void switchWeightings(JComboBox first, JComboBox second, JComboBox third) {
        Weighting firstSelection = (Weighting) first.getSelectedItem();
        Weighting secondSelection = (Weighting) second.getSelectedItem();
        Weighting thirdSelection = (Weighting) third.getSelectedItem();

        if (firstSelection.equals(secondSelection)) {
            second.setSelectedItem(Weighting.getRemaining(firstSelection, thirdSelection));
        } else if (firstSelection.equals(thirdSelection)) {
            third.setSelectedItem(Weighting.getRemaining(firstSelection, secondSelection));
        }
    }

    /**
     * Create the attributes document listener.
     *
     * @return
     */
    private ComponentChangeListener createChangeListener() {
        return new ComponentChangeListener() {
            @Override
            public void stateChanged(ChangeEvent e) {
                if (this.getComponent().equals(actingField)
                    || this.getComponent().equals(alertnessField)
                    || this.getComponent().equals(athleticsField)
                    || this.getComponent().equals(brawlField)
                    || this.getComponent().equals(burglaryField)
                    || this.getComponent().equals(dodgeField)
                    || this.getComponent().equals(empathyField)
                    || this.getComponent().equals(intimidationField)
                    || this.getComponent().equals(leadershipField)
                    || this.getComponent().equals(subterfugeField)
                ) {
                    calculateUsedTalentPoints();
                }

                if (this.getComponent().equals(animalKenField)
                    || this.getComponent().equals(archeryField)
                    || this.getComponent().equals(craftsField)
                    || this.getComponent().equals(etiquetteField)
                    || this.getComponent().equals(herbalismField)
                    || this.getComponent().equals(meleeField)
                    || this.getComponent().equals(musicField)
                    || this.getComponent().equals(rideField)
                    || this.getComponent().equals(stealthField)
                    || this.getComponent().equals(survivalField)
                ) {
                    calculateUsedSkillPoints();
                }

                if (this.getComponent().equals(academicKnowledgeField)
                    || this.getComponent().equals(administrationField)
                    || this.getComponent().equals(folkloreField)
                    || this.getComponent().equals(investigationField)
                    || this.getComponent().equals(lawField)
                    || this.getComponent().equals(linguisticsField)
                    || this.getComponent().equals(medicineField)
                    || this.getComponent().equals(occultField)
                    || this.getComponent().equals(politicsField)
                    || this.getComponent().equals(scienceField)
                ) {
                    calculateUsedKnowledgePoints();
                }

                checkAbilitiesFilled();
                parent.calculateUsedFreeAdditionalPoints();
            }
        };
    }

    /**
     * Add a change listener to the given spinner.
     *
     * @param field
     */
    private void addChangeListener(JSpinner field) {
        ComponentChangeListener attributesListener = this.createChangeListener();
        attributesListener.setComponent(field);
        DefaultFormatter attributesFormatter = (DefaultFormatter) ((JSpinner.DefaultEditor) field.getEditor()).getTextField().getFormatter();
        attributesFormatter.setCommitsOnValidEdit(true);
        field.addChangeListener(attributesListener);
    }

    /**
     * Calculate the used talent points.
     */
    private void calculateUsedTalentPoints() {
        int sum = this.getTalentPointsSum();

        if (this.checkTalentPoints()) {
            this.talentsPointsTextField.setText(
                Integer.toString(this.getTalentMaxPoints())
            );
        } else {
            this.talentsPointsTextField.setText(Integer.toString(sum));
        }
    }

    /**
     * Calculate and return the sum of points spent for talents.
     *
     * @return
     */
    public int getTalentPointsSum() {
        int acting = Integer.parseInt(this.actingField.getValue().toString());
        int alertness = Integer.parseInt(this.alertnessField.getValue().toString());
        int athletics = Integer.parseInt(this.athleticsField.getValue().toString());
        int brawl = Integer.parseInt(this.brawlField.getValue().toString());
        int burglary = Integer.parseInt(this.burglaryField.getValue().toString());
        int dodge = Integer.parseInt(this.dodgeField.getValue().toString());
        int empathy = Integer.parseInt(this.empathyField.getValue().toString());
        int intimidation = Integer.parseInt(this.intimidationField.getValue().toString());
        int leadership = Integer.parseInt(this.leadershipField.getValue().toString());
        int subterfuge = Integer.parseInt(this.subterfugeField.getValue().toString());

        return acting + alertness + athletics + brawl + burglary + dodge
            + empathy + intimidation + leadership + subterfuge;
    }

    /**
     * Check if the spent points for talents is above its maximum.
     *
     * @return
     */
    public boolean checkTalentPoints() {
        return this.getTalentPointsSum() > this.getTalentMaxPoints();
    }

    /**
     * Get the maximum points available for talents.
     *
     * @return
     */
    public int getTalentMaxPoints() {
        return Integer.parseInt(this.talentsMaxPointsTextField.getText());
    }

    /**
     * Calculate the used skill points.
     */
    private void calculateUsedSkillPoints() {
        int sum = this.getSkillPointsSum();

        if (this.checkSkillPoints()) {
            this.skillsPointsTextField.setText(
                Integer.toString(this.getSkillMaxPoints())
            );
        } else {
            this.skillsPointsTextField.setText(Integer.toString(sum));
        }
    }

    /**
     * Calculate and return the sum of points spent for skills.
     *
     * @return
     */
    public int getSkillPointsSum() {
        int animalKen = Integer.parseInt(this.animalKenField.getValue().toString());
        int archery = Integer.parseInt(this.archeryField.getValue().toString());
        int crafts = Integer.parseInt(this.craftsField.getValue().toString());
        int etiquette = Integer.parseInt(this.etiquetteField.getValue().toString());
        int herbalism = Integer.parseInt(this.herbalismField.getValue().toString());
        int melee = Integer.parseInt(this.meleeField.getValue().toString());
        int music = Integer.parseInt(this.musicField.getValue().toString());
        int ride = Integer.parseInt(this.rideField.getValue().toString());
        int stealth = Integer.parseInt(this.stealthField.getValue().toString());
        int survival = Integer.parseInt(this.survivalField.getValue().toString());

        return animalKen + archery + crafts + etiquette + herbalism + melee
            + music + ride + stealth + survival;
    }

    /**
     * Check if the spent points for skills is above its maximum.
     *
     * @return
     */
    public boolean checkSkillPoints() {
        return this.getSkillPointsSum() > this.getSkillMaxPoints();
    }

    /**
     * Get the maximum points available for skills.
     *
     * @return
     */
    public int getSkillMaxPoints() {
        return Integer.parseInt(this.skillsMaxPointsTextField.getText());
    }

    /**
     * Calculate the used knowledge points.
     */
    private void calculateUsedKnowledgePoints() {
        int sum = this.getKnowledgePointsSum();

        if (this.checkKnowledgePoints()) {
            this.knowledgesPointsTextField.setText(
                Integer.toString(this.getKnowledgeMaxPoints())
            );
        } else {
            this.knowledgesPointsTextField.setText(Integer.toString(sum));
        }
    }

    /**
     * Calculate and return the sum of points spent for knowledges.
     *
     * @return
     */
    public int getKnowledgePointsSum() {
        int academicKnowledge = Integer.parseInt(this.academicKnowledgeField.getValue().toString());
        int administration = Integer.parseInt(this.administrationField.getValue().toString());
        int folklore = Integer.parseInt(this.folkloreField.getValue().toString());
        int investigation = Integer.parseInt(this.investigationField.getValue().toString());
        int law = Integer.parseInt(this.lawField.getValue().toString());
        int linguistics = Integer.parseInt(this.linguisticsField.getValue().toString());
        int medicine = Integer.parseInt(this.medicineField.getValue().toString());
        int occult = Integer.parseInt(this.occultField.getValue().toString());
        int politics = Integer.parseInt(this.politicsField.getValue().toString());
        int science = Integer.parseInt(this.scienceField.getValue().toString());

        return academicKnowledge + administration + folklore + investigation + law + linguistics
            + medicine + occult + politics + science;
    }

    /**
     * Check if the spent points for knowledges is above its maximum.
     *
     * @return
     */
    public boolean checkKnowledgePoints() {
        return this.getKnowledgePointsSum() > this.getKnowledgeMaxPoints();
    }

    /**
     * Get the maximum points available for knowledges.
     *
     * @return
     */
    public int getKnowledgeMaxPoints() {
        return Integer.parseInt(this.knowledgesMaxPointsTextField.getText());
    }

    /**
     * Set the spinner field maximum value.
     *
     * @param field
     * @param maximum
     */
    private void setFieldMaximum(JSpinner field, int maximum) {
        int value = Integer.parseInt(field.getValue().toString());
        int minimum = Integer.parseInt(
            ((SpinnerNumberModel) field.getModel()).getMinimum().toString()
        );
        field.setModel(
            new SpinnerNumberModel(
                value > maximum ? maximum : value,
                minimum,
                maximum,
                1
            )
        );
    }

    /**
     * Set the maximum value for the attribute spinners.
     *
     * @param maximum
     */
    public void setAttributeMaximum(int maximum) {
        this.setFieldMaximum(this.actingField, maximum);
        this.setFieldMaximum(this.alertnessField, maximum);
        this.setFieldMaximum(this.athleticsField, maximum);
        this.setFieldMaximum(this.brawlField, maximum);
        this.setFieldMaximum(this.burglaryField, maximum);
        this.setFieldMaximum(this.dodgeField, maximum);
        this.setFieldMaximum(this.empathyField, maximum);
        this.setFieldMaximum(this.intimidationField, maximum);
        this.setFieldMaximum(this.leadershipField, maximum);
        this.setFieldMaximum(this.subterfugeField, maximum);

        this.setFieldMaximum(this.animalKenField, maximum);
        this.setFieldMaximum(this.archeryField, maximum);
        this.setFieldMaximum(this.craftsField, maximum);
        this.setFieldMaximum(this.etiquetteField, maximum);
        this.setFieldMaximum(this.herbalismField, maximum);
        this.setFieldMaximum(this.meleeField, maximum);
        this.setFieldMaximum(this.musicField, maximum);
        this.setFieldMaximum(this.rideField, maximum);
        this.setFieldMaximum(this.stealthField, maximum);
        this.setFieldMaximum(this.survivalField, maximum);

        this.setFieldMaximum(this.academicKnowledgeField, maximum);
        this.setFieldMaximum(this.administrationField, maximum);
        this.setFieldMaximum(this.folkloreField, maximum);
        this.setFieldMaximum(this.investigationField, maximum);
        this.setFieldMaximum(this.lawField, maximum);
        this.setFieldMaximum(this.linguisticsField, maximum);
        this.setFieldMaximum(this.medicineField, maximum);
        this.setFieldMaximum(this.occultField, maximum);
        this.setFieldMaximum(this.politicsField, maximum);
        this.setFieldMaximum(this.scienceField, maximum);

        this.calculateUsedKnowledgePoints();
        this.calculateUsedSkillPoints();
        this.calculateUsedTalentPoints();
    }

    /**
     * Check if every attribute has been set.
     */
    private void checkAbilitiesFilled() {
        int talentsSum = this.getTalentPointsSum();
        int talentsMax = this.getTalentMaxPoints();
        int skillsSum = this.getSkillPointsSum();
        int skillsMax = this.getSkillMaxPoints();
        int knowledgeSum = this.getKnowledgePointsSum();
        int knowledgeMax = this.getKnowledgeMaxPoints();

        if (talentsSum >= talentsMax
            && skillsSum >= skillsMax
            && knowledgeSum >= knowledgeMax
            && this.parent.getMaxActiveTab() < 3
        ) {
            this.parent.increaseMaxActiveTab();
            this.parent.getCharacterTabPane().setEnabledAt(this.parent.getMaxActiveTab(), true);
            this.nextButton.setEnabled(true);
        }
    }

    // <editor-fold defaultstate="collapsed" desc="Generated variables">
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JSpinner academicKnowledgeField;
    private javax.swing.JLabel academicKnowledgeLabel;
    private javax.swing.JSpinner actingField;
    private javax.swing.JLabel actingLabel;
    private javax.swing.JSpinner administrationField;
    private javax.swing.JLabel administrationLabel;
    private javax.swing.JSpinner alertnessField;
    private javax.swing.JLabel alertnessLabel;
    private javax.swing.JSpinner animalKenField;
    private javax.swing.JLabel animalKenLabel;
    private javax.swing.JSpinner archeryField;
    private javax.swing.JLabel archeryLabel;
    private javax.swing.JSpinner athleticsField;
    private javax.swing.JLabel athleticsLabel;
    private javax.swing.JButton backButton;
    private javax.swing.JSpinner brawlField;
    private javax.swing.JLabel brawlLabel;
    private javax.swing.JSpinner burglaryField;
    private javax.swing.JLabel burglaryLabel;
    private javax.swing.JSpinner craftsField;
    private javax.swing.JLabel craftsLabel;
    private javax.swing.JSpinner dodgeField;
    private javax.swing.JLabel dodgeLabel;
    private javax.swing.JSpinner empathyField;
    private javax.swing.JLabel empathyLabel;
    private javax.swing.JSpinner etiquetteField;
    private javax.swing.JLabel etiquetteLabel;
    private javax.swing.JSpinner folkloreField;
    private javax.swing.JLabel folkloreLabel;
    private javax.swing.JSpinner herbalismField;
    private javax.swing.JLabel herbalismLabel;
    private javax.swing.JSpinner intimidationField;
    private javax.swing.JLabel intimidationLabel;
    private javax.swing.JSpinner investigationField;
    private javax.swing.JLabel investigationLabel;
    private javax.swing.JLabel knowledgesLabel;
    private javax.swing.JTextField knowledgesMaxPointsTextField;
    private javax.swing.JTextField knowledgesPointsTextField;
    private javax.swing.JComboBox<String> knowledgesWeightingComboBox;
    private javax.swing.JSpinner lawField;
    private javax.swing.JLabel lawLabel;
    private javax.swing.JSpinner leadershipField;
    private javax.swing.JLabel leadershipLabel;
    private javax.swing.JSpinner linguisticsField;
    private javax.swing.JLabel linguisticsLabel;
    private javax.swing.JSpinner medicineField;
    private javax.swing.JLabel medicineLabel;
    private javax.swing.JSpinner meleeField;
    private javax.swing.JLabel meleeLabel;
    private javax.swing.JSpinner musicField;
    private javax.swing.JLabel musicLabel;
    private javax.swing.JButton nextButton;
    private javax.swing.JSpinner occultField;
    private javax.swing.JLabel occultLabel;
    private javax.swing.JSpinner politicsField;
    private javax.swing.JLabel politicsLabel;
    private javax.swing.JSpinner rideField;
    private javax.swing.JLabel rideLabel;
    private javax.swing.JSpinner scienceField;
    private javax.swing.JLabel scienceLabel;
    private javax.swing.JLabel skillsLabel;
    private javax.swing.JTextField skillsMaxPointsTextField;
    private javax.swing.JTextField skillsPointsTextField;
    private javax.swing.JComboBox<String> skillsWeightingComboBox;
    private javax.swing.JSpinner stealthField;
    private javax.swing.JLabel stealthLabel;
    private javax.swing.JSpinner subterfugeField;
    private javax.swing.JLabel subterfugeLabel;
    private javax.swing.JSpinner survivalField;
    private javax.swing.JLabel survivalLabel;
    private javax.swing.JLabel talentsLabel;
    private javax.swing.JTextField talentsMaxPointsTextField;
    private javax.swing.JTextField talentsPointsTextField;
    private javax.swing.JComboBox<String> talentsWeightingComboBox;
    // End of variables declaration//GEN-END:variables
    // </editor-fold>
}

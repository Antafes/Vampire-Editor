<?xml version="1.0" encoding="UTF-8"?>
<!-- You may freely edit this file. See commented blocks below for -->
<!-- some examples of how to customize the build. -->
<!-- (If you delete it and reopen the project it will be recreated.) -->
<!-- By default, only the Clean and Build commands use this build script. -->
<!-- Commands such as Run, Debug, and Test only use this build script if -->
<!-- the Compile on Save feature is turned off for the project. -->
<!-- You can turn off the Compile on Save (or Deploy on Save) setting -->
<!-- in the project's Project Properties dialog box.-->
<project name="Vampire_Editor" default="compile" basedir=".">
    <description>Builds, tests, and runs the project Vampire Editor.</description>

    <property name="lib.dir"     value="lib"/>
    <property name="src.dir"     value="src"/>
    <property name="fonts.dir"   value="${src.dir}/fonts"/>
    <property name="images.dir"  value="${src.dir}/images"/>

    <property name="build.dir"   value="build"/>
    <property name="classes.dir" value="${build.dir}/classes"/>
    <property name="dist.dir"    value="dist"/>

    <property name="main-class"  value="vampireEditor.VampireEditor"/>

    <path id="classpath">
        <fileset dir="${lib.dir}" includes="**/*.jar"/>
    </path>

    <target name="clean">
        <delete dir="${build.dir}"/>
    </target>

    <target name="compile">
        <mkdir dir="${build.dir}"/>
        <mkdir dir="${classes.dir}"/>
        <javac srcdir="${src.dir}" destdir="${classes.dir}" classpathref="classpath"/>
		<copy todir="${classes.dir}/fonts">
            <fileset dir="${fonts.dir}" includes="**"/>
        </copy>
		<copy todir="${classes.dir}/images">
            <fileset dir="${images.dir}" includes="**"/>
        </copy>
    </target>

    <target name="jar" depends="compile">
        <mkdir dir="${dist.dir}"/>
        <jar destfile="${dist.dir}/${ant.project.name}.jar" basedir="${classes.dir}">
            <manifest>
                <attribute name="Main-Class" value="${main-class}"/>
                <attribute name="Class-Path" value="${lib.dir}/MyXML.jar"/>
            </manifest>
        </jar>
		<copy file="LICENSE" todir="${dist.dir}" />
		<copy todir="${dist.dir}/lib">
            <fileset dir="${lib.dir}" includes="**"/>
        </copy>
    </target>

    <target name="run" depends="jar">
        <java jar="${dist.dir}/${ant.project.name}.jar" fork="true"/>
    </target>
</project>
